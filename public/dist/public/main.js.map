{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>{{ title }}!</h1>\\n  \\n<h2>All the Tasks: </h2>\\n \\n<button (click)= \\\"onButtonClick()\\\">Get all Tasks!</button>\\n <div *ngFor= \\\"let task of tasks\\\">\\n   <p> {{ task.title }} </p>\\n   <button (click)= \\\"showTask(task)\\\">Show</button>\\n  </div> \\n  <hr>\\n\\n<div *ngIf = \\\"taskHasBeenClicked\\\" style= \\\"border: 1px solid blue\\\">\\n  <p>{{ theTask.title }} | {{ theTask.description }} | {{ theTask.completed }}</p>\\n  </div>\\n</div>\\n<!-- <div style=\\\"text-align:center\\\">\\n  <h2>The second task:</h2>\\n  <ul>\\n      <li *ngFor = \\\"let task of tasks; let idx = index\\\">{{task.title}} | {{task.description}}</li>\\n    \\n  </ul>\\n</div> -->\\n\\n<router-outlet></router-outlet>\\n\"","import { Component,OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Restful Tasks API';\n  tasks: any = [];\n  theTask: any;\n  taskHasBeenClicked: boolean = false;\n  \n  \n  constructor(private _httpService: HttpService){\n    \n\n  }\n  ngOnInit(){\n    this.theTask = { title: \"\" , description: \"\", completed: \"\" }\n\n  }\n \n  onButtonClick(){\n    let obs = this._httpService.getTasks();\n    obs.subscribe((data: any) => {\n      console.log(data);\n    this.tasks = data.data;\n    });\n    \n  }\n  showTask(task){\n    this.taskHasBeenClicked = true;\n    this.theTask = task;\n    console.log(\"This is the task to show:\", task);\n  }\n  \n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [ HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient){}\n\n  getTasks(){\n    console.log(\"This gets logged when component is loaded\");\n    // let tempObservable = this._http.get('/tasks');\n    // tempObservable.subscribe(data => console.log(\"Got our tasks!\", data));\n    return this._http.get('/tasks');\n  }\n  getTasksById(id:string){\n    return this._http.get('/tasks/:id');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}